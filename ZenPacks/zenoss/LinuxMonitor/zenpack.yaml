name: ZenPacks.zenoss.LinuxMonitor

classes:
    DEFAULTS:
        base: [zenpacklib.Component]

    PhysicalVolume:
        label: Physical Volume
        dynamicview_views: [service_view]
        dynamicview_relations:
            impacts:
                - volumeGroup
            impacted_by:
                - harddisk
        properties:
            pvsize:
                label: Size
                type: int
                renderer: Zenoss.render.bytesString
                datapoint: volume_size
                order: 4.1
            free:
                label: Free
                type: int
                renderer: Zenoss.render.bytesString
                datapoint: volume_free
                order: 4.2
            utilization:
                label: '% Util'
                order: 4.3
                api_only: true
                api_backendtype: method
            format:
                label: Format
                order: 4.0
            attributes:
                label: Attributes
                grid_display: False
                type: lines
            uuid:
                grid_display: False
            harddisk_id:
                grid_display: False
                details_display: False
                index_type: field
            harddisk:
                label: Hard Disk
                api_only: true
                api_backendtype: method
                type: entity


    VolumeGroup:
        label: Volume Group
        dynamicview_views: [service_view]
        dynamicview_relations:
            impacts:
                - logicalVolumes
            impacted_by:
                - physicalVolumes
        properties:
            vgsize:
                label: Size
                type: int
                datapoint: group_size
                renderer: Zenoss.render.bytesString
                order: 4.1
            freesize:
                label: Free
                type: int
                datapoint: group_free
                renderer: Zenoss.render.bytesString
                order: 4.2
            utilization:
                label: '% Util'
                order: 4.3
                api_only: true
                api_backendtype: method
            snapshot_volumes:
                label: Snapshot Volumes
                api_backendtype: method
                api_only: true
            attributes:
                label: Attributes
                grid_display: False
                type: lines
            uuid:
                grid_display: False

    LogicalVolume:
        label: Logical Volume
        monitoring_templates: ['LogicalVolume']
        dynamicview_views: [service_view]
        dynamicview_relations:
            impacts:
                - snapshotVolumes
                - openstack_core_components
                - filesystem
            impacted_by:
                - volumeGroup
        properties:
            attributes:
                label: Attributes
                grid_display: False
                type: lines
            lvsize:
                label: Size
                type: int
                renderer: Zenoss.render.bytesString
            active:
                label: Active
                datapoint: status_state
                renderer: Zenoss.render.checkbox
            vgname:
                grid_display: False
                details_display: False
            uuid:
                grid_display: False
                details_display: False
            openstack_core_components:
                type: entity
                label: Cinder Integration
                grid_display: false
                api_only: true
                api_backendtype: method
            filesystem:
                label: File System
                api_only: true
                api_backendtype: method
                type: entity
            mountpoint:
                grid_display: False
                details_display: False
                index_type: field
            major_minor:
                label: "Major:Minor"
                grid_display: False


    SnapshotVolume:
        label: Snapshot Volume
        dynamicview_views: [service_view]
        dynamicview_relations:
            impacted_by:
                - logicalVolume
            impacts:
                - openstack_core_components
        properties:
            origin:
                grid_display: False
            attributes:
                label: Attributes
                grid_display: False
                type: lines
            lvsize:
                label: Size
                type: int
                renderer: Zenoss.render.bytesString
            active:
                label: Active
                datapoint: status_state
                renderer: Zenoss.render.checkbox
            vgname:
                grid_display: False
                details_display: False
            uuid:
                grid_display: False
                details_display: False
            openstack_core_components:
                type: entity
                label: Cinder Integration
                grid_display: False
                api_only: true
                api_backendtype: method
            filesystem:
                label: File System
                api_only: true
                api_backendtype: method
                type: entity
            mountpoint:
                grid_display: False
                details_display: False
                index_type: field
            major_minor:
                label: "Major:Minor"
                grid_display: False


class_relationships:
    - Products.ZenModel.Device.Device 1:MC VolumeGroup
    - Products.ZenModel.Device.Device 1:MC PhysicalVolume
    - VolumeGroup 1:M PhysicalVolume
    - VolumeGroup 1:MC LogicalVolume
    - LogicalVolume 1:MC SnapshotVolume

device_classes: !ZenPackSpec
    /Server/SSH/Linux:
        zProperties:
            zCollectorPlugins:
                - zenoss.cmd.uname
                - zenoss.cmd.linux.df
                - zenoss.cmd.linux.alt_kernel_name
                - zenoss.cmd.linux.cpuinfo
                - zenoss.cmd.linux.ifconfig
                - zenoss.cmd.linux.lvm
                - zenoss.cmd.linux.memory
                - zenoss.cmd.linux.netstat_an
                - zenoss.cmd.linux.netstat_rn
                - zenoss.cmd.linux.process
                - zenoss.cmd.linux.rpm
                - zenoss.cmd.linux.sudo_dmidecode
                - zenoss.cmd.linux.os_release
            zSshConcurrentSessions: 5

        templates:
            PhysicalVolume:
                description: Physical Volume Monitoring
                targetPythonClass: ZenPacks.zenoss.LinuxMonitor.PhysicalVolume.PhysicalVolume
                datasources:
                    volume:
                        type: COMMAND
                        commandTemplate: '/usr/bin/sudo /usr/sbin/pvs --noheadings --units b --nosuffix -o pv_name,pv_size,pv_free'
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.utilization
                        datapoints:
                            size:
                                rrdmin: 0
                            free:
                                rrdmin: 0
                    status:
                        type: COMMAND
                        commandTemplate: "/usr/bin/sudo /usr/sbin/pvs --noheadings -o pv_name,pv_attr | awk '{split($$2, chars, \"\"); printf(\"%s \", $$1); for (i=1;i<=3;i++) printf(\"%d \", chars[i]==\"-\" ? 0 : 1); printf(\"\\n\")}'"
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.pvsstatus
                        datapoints:
                            allocatable:
                                rrdmin: 0
                            exported:
                                rrdmin: 0
                            missing:
                                rrdmin: 0
                graphs:
                    Utilization:
                        units: percent
                        miny: 0
                        maxy: 100
                        graphpoints:
                            size:
                                dpName: volume_size
                                lineType: DONTDRAW
                            free:
                                dpName: volume_free
                                lineType: AREA
                                rpn: "size,-,size,/,-100,*"
                thresholds:
                    unallocatable:
                        dsnames: [status_allocatable]
                        minval: 1
                        eventClass: /Status
                    exported:
                        dsnames: [status_exported]
                        maxval: 0
                        severity: 2
                        eventClass: /Status
                    missing:
                        dsnames: [status_missing]
                        maxval: 0
                        eventClass: /Status
            VolumeGroup:
                description: Volume Group Monitoring
                targetPythonClass: ZenPacks.zenoss.LinuxMonitor.VolumeGroup.VolumeGroup
                datasources:
                    group:
                        type: COMMAND
                        commandTemplate: '/usr/bin/sudo /usr/sbin/vgs --noheadings --units b --nosuffix -o vg_name,vg_size,vg_free'
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.utilization
                        datapoints:
                            size:
                                rrdmin: 0
                            free:
                                rrdmin: 0
                    status:
                        type: COMMAND
                        commandTemplate: "/usr/bin/sudo /usr/sbin/vgs --noheadings -o vg_name,vg_attr | awk '{split($$2, chars, \"\"); printf(\"%s \", $$1); for (i=1;i<=3;i++) printf(\"%d \", chars[i]==\"-\" ? 0 : 1); printf(\"\\n\")}'"
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.vgsstatus
                        datapoints:
                            partial:
                                rrdmin: 0
                thresholds:
                    partial:
                        dsnames: [status_partial]
                        minval: 1
                        eventClass: /Status
                graphs:
                    Volume Group Utilization:
                        units: percent
                        miny: 0
                        maxy: 100
                        graphpoints:
                            size:
                                dpName: group_size
                                lineType: DONTDRAW
                            free:
                                dpName: group_free
                                lineType: AREA
                                rpn: "size,-,size,/,-100,*"
            LogicalVolume:
                description: Logical Volume Monitoring
                targetPythonClass: ZenPacks.zenoss.LinuxMonitor.LogicalVolume.LogicalVolume
                datasources:
                    status:
                        type: COMMAND
                        commandTemplate: "/usr/bin/sudo /usr/sbin/lvs --noheadings -o vg_name,lv_name,lv_attr | /usr/bin/awk '{print $$1\"_\"$$2\" \"$$3}'"
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.lvsstatus
                        eventClass: /Status
                        datapoints:
                            state:
                                rrdmin: 0
                            health:
                                rrdmin: 0
            SnapshotVolume:
                description: Snapshot Volume Monitoring
                targetPythonClass: ZenPacks.zenoss.LinuxMonitor.SnapshotVolume.SnapshotVolume
                datasources:
                    status:
                        type: COMMAND
                        commandTemplate: "/usr/bin/sudo /usr/sbin/lvs --noheadings -o vg_name,lv_name,lv_attr | /usr/bin/awk '{print $$1\"_\"$$2\" \"$$3}'"
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.lvsstatus
                        eventClass: /Status
                        datapoints:
                            state:
                                rrdmin: 0
                            health:
                                rrdmin: 0
            HardDisk:
                description: Hard Disk Monitoring
                targetPythonClass: ZenPacks.zenoss.LinuxMonitor.HardDisk.HardDisk
                datasources:
                    diskstats:
                        type: COMMAND
                        commandTemplate: '/bin/cat /proc/diskstats'
                        usessh: true
                        parser: ZenPacks.zenoss.LinuxMonitor.parsers.linux.diskstats
                        datapoints:
                            readsCompleted:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of read requests that were issued to the device per second.
                            readsMerged:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of read requests merged per second that were queued to the device.
                            sectorsRead:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of sectors read from the device per second.
                            msReading:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: Milliseconds spent by all reads in concrete moment of time.
                            writesCompleted:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of write requests that were issued to the device per second.
                            writesMerged:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of write requests merged per second that were queued to the device.
                            sectorsWritten:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: The number of sectors written to the device per second.
                            msWriting:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: Milliseconds spent by all writes in concrete moment of time.
                            ioInProgress:
                                rrdtype: GAUGE
                                rrdmin: 0
                                description: I/Os currently in progress.
                            msDoingIO:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: Milliseconds spent doing I/Os in concrete moment of time.
                            msDoingIOWeighted:
                                rrdtype: DERIVE
                                rrdmin: 0
                                description: This field is incremented at each I/O start, I/O completion, I/O merge, or read of these stats by the number of I/Os in progress times the number of milliseconds spent doing I/O since the last update of this field.

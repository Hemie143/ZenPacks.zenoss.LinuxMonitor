The <span class="zenpack">ZenPacks.zenoss.LinuxMonitor</span> ZenPack demonstrates how to develop new plugins that collect performance data using Secure Shell.


This ZenPack demonstrates the Secure Shell (SSH) features, and enables modeling and monitoring several types of device components for devices placed in the <span class="ph filepath">/Server/SSH/Linux</span> device class by running commands and parsing the output. Parsing of command output is performed on the <span class="ph">Zenoss platform</span> server or on a distributed collector. The account used to monitor the device does not require root access or special privileges.


== Prerequisites ==


{| class="wikitable"
!width="50%"|Prerequisite
!width="50%"|Restriction
|-
|Product
|<span class="ph">Zenoss platform</span> 4.x, Zenoss 2.4 or higher
|-
|Required ZenPacks
|ZenPacks.zenoss.LinuxMonitor
|}


=== Discovery ===
The following entities will be automatically discovered. The attributes and collections will be updated on Zenoss normal remodeling interval which defaults to every 12 hours.
;Hard Disks
: Attributes: Name, Size, LVM PV,

;Processors
: Attributes: Socket, Manufacturer, Model, Speed, Ext Speed, L1, L2, Voltage

;IP Services
: Attributes: Name, Protocol, Port, IPs, Description

;File Systems
: Attributes: Mount Point, Storage Device, Total Bytes, Used Bytes, Free Bytes, % Util

;Interfaces
: Attributes: IP Interface, IP Addresses, Description, MAC Address, Operational Status, Admin Status

;Network Routes
: Attributes: Destination, Next Hop, Interface, Protocol, Type

;Snapshot Volumes
: Attributes: Name, Volume Group, Logical Volume, Size, Block Device, File System, Active
: Relations: Logical Volumes

;Physical Volumes
: Attributes: Name, Format, Size, Free, % Util, Block Device, Volume Group
: Relations: Volume Groups

;Volume Groups
: Attributes: Name, Size, Free, % Util, Snapshot Volumes, Logical Volumes, Physical Volumes

;Logical Volumes
: Attributes: Name, Volume Group, Size, Block Device, File System, Active, Snapshot Volumes
: Relations: Volume Groups

;OS Processes
: Attributes: Process Class, Process Set, Restart Alert?, Fail Severity


== Set Linux Server Monitoring Credentials ==


All Linux servers must have a device entry in an organizer below the <span class="ph filepath">/Devices/Server/SSH/Linux</span> device class.


<span class="tiptitle">Tip:</span>
The SSH monitoring feature will attempt to use key-based authentication before using a configuration properties password value.


<ol>
<li>Select Infrastructure from the navigation bar.
</li>
<li>Click the device name in the device list.

The device overview page appears.
</li>
<li>Select Configuration Properties from the left panel.
</li>
<li>Verify the credentials for the service account.

The zCommandUsername property must be set. To use public key authentication you must verify that the public portion of the key referenced in zKeyPath is installed in the `~/.ssh/authorized_keys` file for the appropriate user on the linux server. If this key has a passphrase you should set it in the zCommandPassword property. If you'd rather use password authentication than setup keys, simply put the user's password in the zCommandPassword property.

=== Using a Root User ===
This ZenPack requires the ability to run the ''pvs'', ''vgs'', ''lvs'', ''systemctl'', ''initctl'' and ''service'' commands, remotely on your linux server(s) using SSH. By default, these commands are only allowed to be run locally. To remotely run these commands, the root user must not be required to use TTY.

# Install the '''sudo''' package on your server.
# Allow root user to execute commands via ssh without a TTY.
## Edit the /etc/sudoers file.
## Find the line containing ''root    ALL=(ALL)       ALL''.
## Add this line underneath it:
##: Defaults:root        !requiretty
## Save the changes and exit.


=== Using a Non-Root User ===
This ZenPack requires the ability to run the ''pvs'', ''vgs'', ''lvs'', ''systemctl'', ''initctl'' and ''service'' commands, remotely on your linux server(s) using SSH. By default, most of these commands are only allowed to be run by the '''root''' user. The output of ''systemctl'', ''initctl'' and ''service'' commands depends on whether they are executed via '''sudo'''. Furthermore, this ZenPack expects these commands be in the user's path. Normally this is only true for the root user.

Assuming that you've created a user named '''zenmonitor''' on your linux servers for monitoring purposes, you can follow these steps to allow the '''zenmonitor''' user to run the commands.

# Install the '''sudo''' package on your server.
# Allow the '''zenmonitor''' user to run the commands via ssh without a TTY.
## Edit the /etc/sudoers file.
## Add the following lines to the bottom of the file:
##: Cmnd_Alias ZENOSS_LVM_CMDS = /usr/sbin/pvs, /usr/sbin/vgs, /usr/sbin/lvs
##: Cmnd_Alias ZENOSS_SVC_CMDS = /bin/systemctl list-units -t service --all --no-page --no-legend, /bin/systemctl status -l -n 0, /sbin/initctl list, /sbin/service --status-all
##: zenmonitor ALL=(ALL) NOPASSWD: ZENOSS_LVM_CMDS, ZENOSS_SVC_CMDS
##: Defaults:zenmonitor        !requiretty
## Save the changes and exit.


{| class="wikitable"
|+ <span class="tablecap"><span class="tablecap">Linux Configuration Properties</span></span>
!width="50%"|Name
!width="50%"|Description
|-
|zCommandUsername

|Linux user with privileges to gather performance information.

|-
|zCommandPassword

|Password for the Linux user.

|}


</li></ol>


== Add a Linux Server ==


The following procedure assumes that credentials have been set.


<ol>
<li>Select Infrastructure from the navigation bar.
</li>
<li>Select Add a Single Device from the Add Device list of options.

The Add a Single Device dialog appears.
</li>
<li>Enter the following information in the dialog:


{| class="wikitable"
|+ <span class="tablecap"><span class="tablecap">Adding Linux Device Details</span></span>
!width="50%"|Name
!width="50%"|Description
|-
|Name or IP

|Linux host to model.

|-
|Device Class

|<span class="ph filepath">/Server/SSH/Linux</span>

|-
|Model Device

|Select this option unless adding a device with a user name and password different than found in the device class. If you do not select this option, then you must add the credentials (see ) and then manually model the device.

|}


</li>
<li>Click '''Add'''.
</li></ol>


== Installed Items ==
Installing this ZenPack will add the following items to your Zenoss system.

;Device Classes
* /Server/SSH/Linux

;Modeler Plugins
* zenoss.cmd.uname
* zenoss.cmd.linux.df
* zenoss.cmd.linux.alt_kernel_name
* zenoss.cmd.linux.cpuinfo
* zenoss.cmd.linux.ifconfig
* zenoss.cmd.linux.lvm
* zenoss.cmd.linux.memory
* zenoss.cmd.linux.netstat_an
* zenoss.cmd.linux.netstat_rn
* zenoss.cmd.linux.process
* zenoss.cmd.linux.rpm
* zenoss.cmd.linux.sudo_dmidecode
* zenoss.cmd.linux.os_release
* zenoss.cmd.linux.os_service

;Monitoring Templates
* Device (in /Devices/Server/SSH/Linux)
* HardDisk (in /Devices/Server/SSH/Linux)
* IpService (in /Devices)
* FileSystem (in /Devices/Server/SSH/Linux)
* ethernetCsmacd (in /Devices/Server/SSH/Linux)
* SnapshotVolume (in /Devices/Server/SSH/Linux)
* PhysicalVolume (in /Devices/Server/SSH/Linux)
* VolumeGroup (in /Devices/Server/SSH/Linux)
* LogicalVolume (in /Devices/Server/SSH/Linux)
* OSProcess (in /Devices/Server/SSH/Linux)

== Monitoring Templates ==
;Device (in /Devices/Server/SSH/Linux)
* Data Points
** ssCpuIdlePerCpu
** ssCpuUserPerCpu
** ssCpuSystemPerCpu
** ssCpuWaitPerCpu
** sysUpTime
** laLoadInt15
** laLoadInt5
** laLoadInt1
** Buffers
** Cached
** MemFree
** MemTotal
** SwapFree
** SwapTotal
** ssIORawReceived
** ssIORawSent
* Thresholds
** ''None''
* Graphs
** CPU Utilization
** Load Average
** Memory Utilization
** Memory Usage
** IO Throughput

;HardDisk (in /Devices/Server/SSH/Linux)
* Data Points
** readsCompleted
** readsMerged
** sectorsRead
** msReading
** writesCompleted
** writesMerged
** sectorsWritten
** msWriting
** ioInProgress
** msDoingIO
** msDoingIOWeighted
* Thresholds
** ''None''
* Graphs
** Operation Throughtput
** Merge Rate
** Sector Throughtput
** IO Operation in Progress
** IO Utilization
** Weighted IO Utilization

;IpService (in /Devices)
* Data Points
** ''None''
* Thresholds
** ''None''
* Graphs
** ''None''

;FileSystem (in /Devices/Server/SSH/Linux)
* Data Points
** usedBlocks
** percentInodesUsed
** totalInodes
** usedInodes
** availableInodes
* Thresholds
** 90 percent used
* Graphs
** Utilization
** Usage
** Inode Utilization
** Inode Usage

;ethernetCsmacd (in /Devices/Server/SSH/Linux)
* Data Points
** ifInOctets
** ifOutOctets
** ifInPackets
** ifOutPackets
** ifInErrors
** ifInDropped
** ifInOverruns
** ifOutErrors
** ifOutCarrier
** ifOutCollisions
** ifOutDropped
* Thresholds
** 75 percent utilization
* Graphs
** Data Throughput
** Packet Throughput
** Error Rate

;SnaphotVolume (in /Devices/Server/SSH/Linux)
* Data Points
** state
** health
* Thresholds
** ''None''
* Graphs
** ''None''

;PhysicalVolume (in /Devices/Server/SSH/Linux)
* Data Points
** size
** free
** allocatable
** exported
** missing
* Thresholds
** unallocatable
** exported
** missing
* Graphs
** Utilization

;VolumeGroup (in /Devices/Server/SSH/Linux)
* Data Points
** size
** free
** partial
* Thresholds
** partial
* Graphs
** Utilization

;LogicalVolume (in /Devices/Server/SSH/Linux)
* Data Points
** state
** health
* Thresholds
** ''None''
* Graphs
** ''None''

;OSProcess (in /Devices/Server/SSH/Linux)
* Data Points
** count
** cpu
** mem
* Thresholds
** count
* Graphs
** Process Count
** CPU Utilization
** Memory Usage

== Daemons ==


{| class="wikitable"
!width="50%"|Type
!width="50%"|Name
|-
|Modeler
|<span class="keyword cmdname">zenmodeler</span>
|-
|Performance Collector
|<span class="keyword cmdname">zencommand</span>
|}
== Installation =={{#vardefine:restart|{{#show: {{FULLPAGENAME}} | ?Restart}}}}
{{ZenPackEggInstallationCli|restart={{#var:restart|zenoss restart}}}}
{{#ifeq:{{#show: {{FULLPAGENAME}} | ?flavor}}|commercial||{{ZenPackDevelopmentInstallationCli|restart={{#var:restart|zenoss restart}}}}}}
{{ Note }} EnterpriseLinux ZP is not required with new LinuxMonitor ZP